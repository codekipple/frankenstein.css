/*  ==========================================================================
    Objects:Nav
    ==========================================================================

    Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
    When used on an `ol` or `ul`, this class throws the list into horizontal mode
    e.g.:

    <ul class=nav>
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
        <li><a href=#>Contact</a></li>
    </ul>

    Demo: jsfiddle.net/inuitcss/Vnph4

*/

/*
    1:  Set line-height so positing does not depend on the global line-height set on the html element.
        Overwrite this value on a particular nav if you need to.

        This way if the global line-height changes it does not effect the navigations position.
*/
.nav {
    list-style: none;
    margin-left: 0;
    @extend .cf;
    line-height: 1em; /* 1 */

    > li {

        &,
        > a {
            display: inline-block;
        }
    }
}


/*
    .nav--stacked
    -------------
    extends .nav and throws the list into vertical mode, e.g.:

    <ul class="nav  nav--stacked">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

*/
.nav--stacked {
    > li {
        display: list-item;

        > a {
            display: block;
        }
    }
}


/*
    Force a nav to occupy 100% of the available width of its parent. Extends
    .nav, e.g.:

    <ul class="nav  nav--fit">
        <li><a href=#>Home</a></li>
        <li><a href=#>About</a></li>
        <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
    </ul>

    Thanks to @pimpl for this idea!
*/
.nav--fit {
    display: table;
    width: 100%;

    > li {
        display: table-cell;

        > a {
            display: block;
        }
    }
}


/*
    Make a list of keywords. Extends `.nav`, e.g.:

    <ul class="nav  nav--keywords>

*/
.nav--keywords {

    > li {

        &:after {
            content: ", ";
        }

        &:last-child:after {
            display: none;
        }
    }
}