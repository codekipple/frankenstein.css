/*
    Forms
    =====
*/

.form {}

.form__group {
    margin-bottom: 1em;
}

/*
    Common form controls
    --------------------
    Shared size and type resets for form controls. Apply `.form-control` to any
    of the following form controls:

    select
    textarea
    input[type="text"]
    input[type="password"]
    input[type="datetime"]
    input[type="datetime-local"]
    input[type="date"]
    input[type="month"]
    input[type="time"]
    input[type="week"]
    input[type="number"]
    input[type="email"]
    input[type="url"]
    input[type="search"]
    input[type="tel"]
    input[type="color"]
*/
.form__control {
    vertical-align: middle;
    display: block;
    width: 100%;
    font-size: inherit;
    line-height: inherit;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
    transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    @extend %placeholder;


    &:focus {
        border-color: $color-input-focus;
        outline: 0;
        box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(red($color-input-focus), green($color-input-focus), blue($color-input-focus), .6);
    }

    /*
        Disabled and read-only inputs
        -----------------------------
        HTML5 says that controls under a fieldset > legend:first-child won't be
        disabled if the fieldset is disabled. Due to implementation difficulty, we
        don't honor that edge case; we style them as disabled anyway.
    */
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        cursor: not-allowed;
        background-color: $color-input-bg-disabled;
        opacity: 1; // iOS fix for unreadable disabled content
    }

}

/*
    Reset height for `textarea`s
*/
textarea.form-control {
    height: auto;
}


/*
    Checkboxes and radios
    ---------------------
    Indent the labels to position radios/checkboxes as hanging controls.
*/
.radio,
.checkbox {
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;
    padding-left: 20px;

    label {
        display: inline;
        font-weight: normal;
        cursor: pointer;
    }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
    float: left;
    margin-left: 1em;
}

.radio + .radio,
.checkbox + .checkbox {
    margin-top: .5em; // Move up sibling radios or checkboxes for tighter spacing
}

/*
    Radios and checkboxes on same line
*/
.radio-inline,
.checkbox-inline {
    display: inline-block;
    padding-left: 1em;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
    margin-top: 0;
    margin-left: .5em; // space out consecutive inline controls
}

/*
    Apply same disabled cursor tweak as for inputs

    Note: Neither radios nor checkboxes can be readonly.
*/
input[type="radio"],
input[type="checkbox"],
.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
    &[disabled],
    fieldset[disabled] & {
        cursor: not-allowed;
    }
}

