/*------------------------------------*\
    $GRIDS
\*------------------------------------*/
/**
 * Fluid and nestable grid system, e.g.:
 *
   <div class="grid">

       <div class="grid__cell one-third">
           <p>One third grid</p>
       </div><!--

    --><div class="grid__cell two-thirds">
           <p>Two thirds grid</p>
       </div><!--

    --><div class="grid__cell one-half">
           <p>One half grid</p>
       </div><!--

    --><div class="grid__cell one-quarter">
           <p>One quarter grid</p>
       </div><!--

    --><div class="grid__cell one-quarter">
           <p>One quarter grid</p>
       </div>

   </div>
 *
 */


/**
 * All content must be contained within child `Grid-cell` elements.
 *
 * 1. Account for browser defaults of elements that might be the root node of
 *    the component.
 * 2. Ensure consistent default alignment.
 */
.grid {
    display: block; /* 1 */
    padding: 0; /* 1 */
    margin: 0; /* 1 */
    text-align: left; /* 2 */
}


/**
 * Very infrequently occuring grid wrappers as children of grid wrappers.
 */
.grid > .grid{
    margin-left:0;
}

/**
 * No explicit width by default. Rely on combining `Grid-cell` with a dimension
 * utility or a component class that extends 'grid'.
 *
 * 1. Fundamentals of the non-float grid layout.
 * 2. Controls vertical positioning of units.
 * 3. Make cells full-width by default.
 */
.grid__cell{
    display: inline-block; /* 1 */
    vertical-align: top; /* 2 */
    width: 100%; /* 3 */
}